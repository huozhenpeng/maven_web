<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.IAccountDao">

    <resultMap id="accountMap" type="mybatis.domain.Account2">
        <!--主键字段-->
        <id property="userId" column="id"/>
        <!--非主键字段-->
        <result property="userName" column="username"/>
        <result property="userAge" column="age"/>
        <result property="userBalance" column="balance"/>
        <result property="userPassword" column="password"/>
    </resultMap>

    <select id="findAll" resultType="mybatis.domain.Account" >
        select * from account
    </select>

    <select id="findAllMap" resultMap="accountMap" >
        select * from account
    </select>

    <select id="findById" resultType="mybatis.domain.Account" parameterType="int">
        select * from account where id = #{id}
    </select>

<!--    注意标签别写错了 insert-->
    <insert id="saveAccount" parameterType="mybatis.domain.Account" >
        insert into account (balance, username, age, address, password)
        values (#{balance}, #{username}, #{age}, #{address}, #{password})
    </insert>

    <!--    注意标签别写错了 insert-->
    <insert id="testSaveAccount_getId" parameterType="mybatis.domain.Account" >
        <selectKey keyColumn="id" keyProperty="id" resultType="Long" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into account (balance, username, age, address, password)
        values (#{balance}, #{username}, #{age}, #{address}, #{password})
    </insert>

    <update id="testUpdate" parameterType="mybatis.domain.Account">
        update account set balance = #{balance}, age = ${age} where id = ${id}
    </update>

    <delete id="deleteById" parameterType="int" >
        <!--userId这个值随便写，写啥都行，感觉就相当于个形参-->
        delete from account where id = ${userId}
    </delete>

    <select id="findTotal" resultType="int">
        select count(id) from account;
    </select>
    
    <select id="findByVo" parameterType="mybatis.domain.QueryVo" resultType="mybatis.domain.Account">
        select * from account where username like #{account.username}
    </select>

    <select id="selectByDynamicIf" parameterType="mybatis.domain.Account" resultType="mybatis.domain.Account">
        select * from account where 1 = 1
        <if test="username != null and username != ''">
            and username like #{username}
        </if>
        <if test="address != null and address != ''">
            and address like #{address}
        </if>

    </select>


    <!-- 抽取重复sql -->
    <sql id="defaultAccount">
        select * from account
    </sql>
    <!-- where可以不用写1=1 -->
    <select id="selectByDynamicWhere" parameterType="mybatis.domain.Account" resultType="mybatis.domain.Account">
        <include refid="defaultAccount"></include>
        <where>
            <if test="username != null and username != ''">
                and username like #{username}
            </if>
            <if test="address != null and address != ''">
                and address like #{address}
            </if>
        </where>
    </select>
    <!--    查询所有用户，id在ids中 -->
    <!--    collection:代表要遍历的集合元素，注意编写时不要写#{} -->
    <!--    open:代表语句的开始部分-->
    <!--    close:代表结束部分-->
    <!--    item:代表遍历集合的每个元素，生成的变量名-->
    <!--    sperator:代表分隔符-->
    <select id="queryByIn" resultType="mybatis.domain.Account" parameterType="mybatis.domain.QueryVo">
        <!--	select * from user where id in (1,2,3,4,5); -->
        <include refid="defaultAccount"></include>
        <where>
            <if test="ids != null and ids.size() > 0">
                <foreach collection="ids" open="id in ( " close=")" item="uid" separator=",">
                    #{uid}
                </foreach>
            </if>
        </where>
    </select>

    <select id="selectMultipleTable" resultType="mybatis.domain.AccountOrder">
        select a.*, g.goods_name from account a, goods_order g where a.goods_id = g.id;
    </select>


    <resultMap id="orderMap" type="mybatis.domain.Account2">
        <id column="id" property="userId"/>
        <result property="userName" column="username"/>
        <result property="userAge" column="age"/>
        <result property="userBalance" column="balance"/>
        <result property="userPassword" column="password"/>
        <association property="order" javaType="mybatis.domain.Order">
            <id column="id" property="goods_id"/>
            <result column="goods_name" property="goods_name"/>
        </association>
    </resultMap>



    <select id="selectMultipleTable2" resultMap="orderMap">
        select a.*, g.goods_name from account a, goods_order g where a.goods_id = g.id;
    </select>


</mapper>